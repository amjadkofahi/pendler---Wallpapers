#pragma checksum "C:\Users\mouta\Documents\pendler\pendler\pendler\MainPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "23799BFDC4FDB95C740C5FFB513EDEAB"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace pendler
{
    partial class MainPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Media_ImageBrush_ImageSource(global::Windows.UI.Xaml.Media.ImageBrush obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.ImageSource = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainPage_obj30_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::pendler.DynamicWallpaperBitmaps dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj30;
            private global::Windows.UI.Xaml.Media.ImageBrush obj31;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj31ImageSourceDisabled = false;

            public MainPage_obj30_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 342 && columnNumber == 49)
                {
                    isobj31ImageSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 30: // MainPage.xaml line 340
                        this.obj30 = new global::System.WeakReference((global::Windows.UI.Xaml.Shapes.Ellipse)target);
                        break;
                    case 31: // MainPage.xaml line 342
                        this.obj31 = (global::Windows.UI.Xaml.Media.ImageBrush)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj30.Target as global::Windows.UI.Xaml.Shapes.Ellipse).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::pendler.DynamicWallpaperBitmaps) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::pendler.DynamicWallpaperBitmaps)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::pendler.DynamicWallpaperBitmaps obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_DynamicWallpaperImageIcon(obj.DynamicWallpaperImageIcon, phase);
                    }
                }
            }
            private void Update_DynamicWallpaperImageIcon(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 342
                    if (!isobj31ImageSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_ImageBrush_ImageSource(this.obj31, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainPage_obj38_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::pendler.WeatherWallpaperBitmaps dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj38;
            private global::Windows.UI.Xaml.Media.ImageBrush obj39;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj39ImageSourceDisabled = false;

            public MainPage_obj38_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 298 && columnNumber == 49)
                {
                    isobj39ImageSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 38: // MainPage.xaml line 296
                        this.obj38 = new global::System.WeakReference((global::Windows.UI.Xaml.Shapes.Ellipse)target);
                        break;
                    case 39: // MainPage.xaml line 298
                        this.obj39 = (global::Windows.UI.Xaml.Media.ImageBrush)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj38.Target as global::Windows.UI.Xaml.Shapes.Ellipse).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::pendler.WeatherWallpaperBitmaps) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::pendler.WeatherWallpaperBitmaps)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::pendler.WeatherWallpaperBitmaps obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_WeatherWallpaperImageIcon(obj.WeatherWallpaperImageIcon, phase);
                    }
                }
            }
            private void Update_WeatherWallpaperImageIcon(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 298
                    if (!isobj39ImageSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_ImageBrush_ImageSource(this.obj39, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainPage_obj76_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::pendler.ModernWallpaperBitmaps dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj76;
            private global::Windows.UI.Xaml.Media.ImageBrush obj77;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj77ImageSourceDisabled = false;

            public MainPage_obj76_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 142 && columnNumber == 49)
                {
                    isobj77ImageSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 76: // MainPage.xaml line 140
                        this.obj76 = new global::System.WeakReference((global::Windows.UI.Xaml.Shapes.Ellipse)target);
                        break;
                    case 77: // MainPage.xaml line 142
                        this.obj77 = (global::Windows.UI.Xaml.Media.ImageBrush)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj76.Target as global::Windows.UI.Xaml.Shapes.Ellipse).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::pendler.ModernWallpaperBitmaps) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::pendler.ModernWallpaperBitmaps)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::pendler.ModernWallpaperBitmaps obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ModernWallpaperImageIcon(obj.ModernWallpaperImageIcon, phase);
                    }
                }
            }
            private void Update_ModernWallpaperImageIcon(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 142
                    if (!isobj77ImageSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_ImageBrush_ImageSource(this.obj77, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::pendler.MainPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.GridView obj24;
            private global::Windows.UI.Xaml.Controls.GridView obj32;
            private global::Windows.UI.Xaml.Controls.GridView obj40;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj24ItemsSourceDisabled = false;
            private static bool isobj32ItemsSourceDisabled = false;
            private static bool isobj40ItemsSourceDisabled = false;

            public MainPage_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 337 && columnNumber == 130)
                {
                    isobj24ItemsSourceDisabled = true;
                }
                else if (lineNumber == 293 && columnNumber == 130)
                {
                    isobj32ItemsSourceDisabled = true;
                }
                else if (lineNumber == 137 && columnNumber == 131)
                {
                    isobj40ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 24: // MainPage.xaml line 337
                        this.obj24 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        break;
                    case 32: // MainPage.xaml line 293
                        this.obj32 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        break;
                    case 40: // MainPage.xaml line 137
                        this.obj40 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::pendler.MainPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::pendler.MainPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_DynamicWallpaperBitmap(obj.DynamicWallpaperBitmap, phase);
                        this.Update_WeatherWallpaperBitmap(obj.WeatherWallpaperBitmap, phase);
                        this.Update_ModernWallpaperBitmap(obj.ModernWallpaperBitmap, phase);
                    }
                }
            }
            private void Update_DynamicWallpaperBitmap(global::System.Collections.ObjectModel.ObservableCollection<global::pendler.DynamicWallpaperBitmaps> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 337
                    if (!isobj24ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj24, obj, null);
                    }
                }
            }
            private void Update_WeatherWallpaperBitmap(global::System.Collections.ObjectModel.ObservableCollection<global::pendler.WeatherWallpaperBitmaps> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 293
                    if (!isobj32ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj32, obj, null);
                    }
                }
            }
            private void Update_ModernWallpaperBitmap(global::System.Collections.ObjectModel.ObservableCollection<global::pendler.ModernWallpaperBitmaps> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 137
                    if (!isobj40ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj40, obj, null);
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // MainPage.xaml line 14
                {
                    this.animatingColumOpen = (global::Windows.UI.Xaml.Media.Animation.Storyboard)(target);
                }
                break;
            case 3: // MainPage.xaml line 21
                {
                    this.animatingColumClose = (global::Windows.UI.Xaml.Media.Animation.Storyboard)(target);
                }
                break;
            case 4: // MainPage.xaml line 95
                {
                    this.SettingsGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 5: // MainPage.xaml line 122
                {
                    this.ButtonChangeColomWidth = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.ButtonChangeColomWidth).Click += this.ChangeColomWidth;
                }
                break;
            case 6: // MainPage.xaml line 123
                {
                    this.ModernContentDialog = (global::Windows.UI.Xaml.Controls.ContentDialog)(target);
                }
                break;
            case 7: // MainPage.xaml line 280
                {
                    this.WeatherContentDialog = (global::Windows.UI.Xaml.Controls.ContentDialog)(target);
                }
                break;
            case 8: // MainPage.xaml line 324
                {
                    this.DynamicContentDialog = (global::Windows.UI.Xaml.Controls.ContentDialog)(target);
                }
                break;
            case 9: // MainPage.xaml line 367
                {
                    this.FirstRunIntroDialog = (global::Windows.UI.Xaml.Controls.ContentDialog)(target);
                }
                break;
            case 10: // MainPage.xaml line 478
                {
                    this.ImageIntro07 = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 11: // MainPage.xaml line 479
                {
                    this.TextIntro07 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.TextIntro07).Click += this.Start;
                }
                break;
            case 12: // MainPage.xaml line 462
                {
                    this.ImageIntro06 = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 13: // MainPage.xaml line 463
                {
                    this.TextIntro06 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 14: // MainPage.xaml line 446
                {
                    this.ImageIntro05 = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 15: // MainPage.xaml line 447
                {
                    this.TextIntro05 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 16: // MainPage.xaml line 430
                {
                    this.ImageIntro04 = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 17: // MainPage.xaml line 431
                {
                    this.TextIntro04 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 18: // MainPage.xaml line 414
                {
                    this.ImageIntro03 = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 19: // MainPage.xaml line 415
                {
                    this.TextIntro03 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 20: // MainPage.xaml line 398
                {
                    this.ImageIntro02 = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 21: // MainPage.xaml line 399
                {
                    this.TextIntro02 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 22: // MainPage.xaml line 382
                {
                    this.ImageIntro01 = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 23: // MainPage.xaml line 383
                {
                    this.TextIntro01 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 24: // MainPage.xaml line 337
                {
                    this.DynamicGridView = (global::Windows.UI.Xaml.Controls.GridView)(target);
                    ((global::Windows.UI.Xaml.Controls.GridView)this.DynamicGridView).ItemClick += this.DynamicItemClick;
                }
                break;
            case 25: // MainPage.xaml line 348
                {
                    global::Windows.UI.Xaml.Controls.Button element25 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element25).Click += this.CancelDynamicContentDialog;
                }
                break;
            case 26: // MainPage.xaml line 349
                {
                    this.DynamicDeleteButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 27: // MainPage.xaml line 364
                {
                    global::Windows.UI.Xaml.Controls.Button element27 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element27).Click += this.UseSelectedDynamic;
                }
                break;
            case 28: // MainPage.xaml line 351
                {
                    this.AreYouSureFlyOut = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                }
                break;
            case 29: // MainPage.xaml line 359
                {
                    global::Windows.UI.Xaml.Controls.Button element29 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element29).Click += this.DeleteSelectedDynamic;
                }
                break;
            case 32: // MainPage.xaml line 293
                {
                    this.WeatherGridView = (global::Windows.UI.Xaml.Controls.GridView)(target);
                    ((global::Windows.UI.Xaml.Controls.GridView)this.WeatherGridView).ItemClick += this.WeatherItemClick;
                }
                break;
            case 33: // MainPage.xaml line 304
                {
                    global::Windows.UI.Xaml.Controls.Button element33 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element33).Click += this.CancelWeatherContentDialog;
                }
                break;
            case 34: // MainPage.xaml line 305
                {
                    this.WeatherDeleteButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 35: // MainPage.xaml line 320
                {
                    global::Windows.UI.Xaml.Controls.Button element35 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element35).Click += this.UseWeatherSelected;
                }
                break;
            case 36: // MainPage.xaml line 307
                {
                    this.AreYouSureFlyOut2 = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                }
                break;
            case 37: // MainPage.xaml line 315
                {
                    global::Windows.UI.Xaml.Controls.Button element37 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element37).Click += this.DeleteSelectedWeather;
                }
                break;
            case 40: // MainPage.xaml line 137
                {
                    this.ModernGridView = (global::Windows.UI.Xaml.Controls.GridView)(target);
                    ((global::Windows.UI.Xaml.Controls.GridView)this.ModernGridView).ItemClick += this.ModernItemClicked;
                }
                break;
            case 41: // MainPage.xaml line 148
                {
                    global::Windows.UI.Xaml.Controls.Button element41 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element41).Click += this.CancelModernContentDialog;
                }
                break;
            case 42: // MainPage.xaml line 276
                {
                    global::Windows.UI.Xaml.Controls.Button element42 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element42).Click += this.ApplyModernTheme;
                }
                break;
            case 43: // MainPage.xaml line 155
                {
                    this.AcentSwitcher = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 44: // MainPage.xaml line 214
                {
                    this.SwitchColoursButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.SwitchColoursButton).Click += this.SwitchColors;
                }
                break;
            case 45: // MainPage.xaml line 215
                {
                    this.ColorSwitcher = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 46: // MainPage.xaml line 216
                {
                    this.ColorColorButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 47: // MainPage.xaml line 232
                {
                    this.ColorGradient1Button = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 48: // MainPage.xaml line 247
                {
                    this.ColorGradSwitcher = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.ColorGradSwitcher).Click += this.SwitchColorGradient;
                }
                break;
            case 49: // MainPage.xaml line 257
                {
                    this.ColorGradient2Button = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 50: // MainPage.xaml line 259
                {
                    this.Fly1 = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                    ((global::Windows.UI.Xaml.Controls.Flyout)this.Fly1).Closing += this.FlyClosing;
                }
                break;
            case 51: // MainPage.xaml line 266
                {
                    if (MainPage.IsApiContractPresent_Windows_Foundation_UniversalApiContract_5)
                    {
                        this.ColorGradient2Picker = (global::Windows.UI.Xaml.Controls.ColorPicker)(target);
                        if (MainPage.IsApiContractPresent_Windows_Foundation_UniversalApiContract_5)
                        {
                            ((global::Windows.UI.Xaml.Controls.ColorPicker)this.ColorGradient2Picker).ColorChanged += this.ColorGradient2Changed;
                        }
                    }
                }
                break;
            case 52: // MainPage.xaml line 267
                {
                    global::Windows.UI.Xaml.Controls.Button element52 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element52).Click += this.ColorConstant;
                }
                break;
            case 53: // MainPage.xaml line 251
                {
                    this.ColorGradient1 = (global::Windows.UI.Xaml.Media.GradientStop)(target);
                }
                break;
            case 54: // MainPage.xaml line 252
                {
                    this.ColorGradient2 = (global::Windows.UI.Xaml.Media.GradientStop)(target);
                }
                break;
            case 55: // MainPage.xaml line 234
                {
                    this.Fly2 = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                    ((global::Windows.UI.Xaml.Controls.Flyout)this.Fly2).Closing += this.FlyClosing;
                }
                break;
            case 56: // MainPage.xaml line 241
                {
                    if (MainPage.IsApiContractPresent_Windows_Foundation_UniversalApiContract_5)
                    {
                        this.ColorGradient1Picker = (global::Windows.UI.Xaml.Controls.ColorPicker)(target);
                        if (MainPage.IsApiContractPresent_Windows_Foundation_UniversalApiContract_5)
                        {
                            ((global::Windows.UI.Xaml.Controls.ColorPicker)this.ColorGradient1Picker).ColorChanged += this.ColorGradient1Changed;
                        }
                    }
                }
                break;
            case 57: // MainPage.xaml line 242
                {
                    global::Windows.UI.Xaml.Controls.Button element57 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element57).Click += this.ColorConstant;
                }
                break;
            case 58: // MainPage.xaml line 218
                {
                    this.Fly3 = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                    ((global::Windows.UI.Xaml.Controls.Flyout)this.Fly3).Closing += this.FlyClosing;
                }
                break;
            case 59: // MainPage.xaml line 225
                {
                    if (MainPage.IsApiContractPresent_Windows_Foundation_UniversalApiContract_5)
                    {
                        this.ColorColorPicker = (global::Windows.UI.Xaml.Controls.ColorPicker)(target);
                        if (MainPage.IsApiContractPresent_Windows_Foundation_UniversalApiContract_5)
                        {
                            ((global::Windows.UI.Xaml.Controls.ColorPicker)this.ColorColorPicker).ColorChanged += this.ColorColorChanged;
                        }
                    }
                }
                break;
            case 60: // MainPage.xaml line 226
                {
                    global::Windows.UI.Xaml.Controls.Button element60 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element60).Click += this.ColorDynamic;
                }
                break;
            case 61: // MainPage.xaml line 156
                {
                    this.AccentColorButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 62: // MainPage.xaml line 172
                {
                    this.AcentGradient1Button = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 63: // MainPage.xaml line 187
                {
                    this.AcentGradSwitcher = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.AcentGradSwitcher).Click += this.SwitchAcentGradient;
                }
                break;
            case 64: // MainPage.xaml line 197
                {
                    this.AcentGradient2Button = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 65: // MainPage.xaml line 199
                {
                    this.Fly4 = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                    ((global::Windows.UI.Xaml.Controls.Flyout)this.Fly4).Closing += this.FlyClosing;
                }
                break;
            case 66: // MainPage.xaml line 206
                {
                    if (MainPage.IsApiContractPresent_Windows_Foundation_UniversalApiContract_5)
                    {
                        this.AcentGradient2Picker = (global::Windows.UI.Xaml.Controls.ColorPicker)(target);
                        if (MainPage.IsApiContractPresent_Windows_Foundation_UniversalApiContract_5)
                        {
                            ((global::Windows.UI.Xaml.Controls.ColorPicker)this.AcentGradient2Picker).ColorChanged += this.AcentGradient2Changed;
                        }
                    }
                }
                break;
            case 67: // MainPage.xaml line 207
                {
                    global::Windows.UI.Xaml.Controls.Button element67 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element67).Click += this.AcentConstant;
                }
                break;
            case 68: // MainPage.xaml line 191
                {
                    this.AcentGradient1 = (global::Windows.UI.Xaml.Media.GradientStop)(target);
                }
                break;
            case 69: // MainPage.xaml line 192
                {
                    this.AcentGradient2 = (global::Windows.UI.Xaml.Media.GradientStop)(target);
                }
                break;
            case 70: // MainPage.xaml line 174
                {
                    this.Fly5 = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                    ((global::Windows.UI.Xaml.Controls.Flyout)this.Fly5).Closing += this.FlyClosing;
                }
                break;
            case 71: // MainPage.xaml line 181
                {
                    if (MainPage.IsApiContractPresent_Windows_Foundation_UniversalApiContract_5)
                    {
                        this.AcentGradient1Picker = (global::Windows.UI.Xaml.Controls.ColorPicker)(target);
                        if (MainPage.IsApiContractPresent_Windows_Foundation_UniversalApiContract_5)
                        {
                            ((global::Windows.UI.Xaml.Controls.ColorPicker)this.AcentGradient1Picker).ColorChanged += this.AcentGradient1Changed;
                        }
                    }
                }
                break;
            case 72: // MainPage.xaml line 182
                {
                    global::Windows.UI.Xaml.Controls.Button element72 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element72).Click += this.AcentConstant;
                }
                break;
            case 73: // MainPage.xaml line 158
                {
                    this.Fly6 = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                    ((global::Windows.UI.Xaml.Controls.Flyout)this.Fly6).Closing += this.FlyClosing;
                }
                break;
            case 74: // MainPage.xaml line 165
                {
                    if (MainPage.IsApiContractPresent_Windows_Foundation_UniversalApiContract_5)
                    {
                        this.AccentColorPicker = (global::Windows.UI.Xaml.Controls.ColorPicker)(target);
                        if (MainPage.IsApiContractPresent_Windows_Foundation_UniversalApiContract_5)
                        {
                            ((global::Windows.UI.Xaml.Controls.ColorPicker)this.AccentColorPicker).ColorChanged += this.AccentColorChanged;
                        }
                    }
                }
                break;
            case 75: // MainPage.xaml line 166
                {
                    global::Windows.UI.Xaml.Controls.Button element75 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element75).Click += this.AcentDynamic;
                }
                break;
            case 78: // MainPage.xaml line 120
                {
                    if (MainPage.IsApiContractPresent_Windows_Foundation_UniversalApiContract_5)
                    {
                        this.ProgressBar = (global::Windows.UI.Xaml.Controls.ProgressBar)(target);
                    }
                }
                break;
            case 79: // MainPage.xaml line 115
                {
                    this.AddHeifButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.AddHeifButton).Click += this.AddHEICFileToLibrary;
                }
                break;
            case 80: // MainPage.xaml line 116
                {
                    this.AddZipButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.AddZipButton).Click += this.AddZipFileToLibrary;
                }
                break;
            case 81: // MainPage.xaml line 117
                {
                    this.AddDirectoryButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.AddDirectoryButton).Click += this.AddFolderToLibrary;
                }
                break;
            case 82: // MainPage.xaml line 118
                {
                    global::Windows.UI.Xaml.Controls.Button element82 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element82).Click += this.GoToCreatePage;
                }
                break;
            case 83: // MainPage.xaml line 106
                {
                    this.BackgroundSlider = (global::Windows.UI.Xaml.Controls.Slider)(target);
                    ((global::Windows.UI.Xaml.Controls.Slider)this.BackgroundSlider).ValueChanged += this.ChangingSlidBar;
                }
                break;
            case 84: // MainPage.xaml line 108
                {
                    this.CurrentLocation = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 85: // MainPage.xaml line 109
                {
                    global::Windows.UI.Xaml.Controls.Button element85 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element85).Click += this.CheckLocation;
                }
                break;
            case 86: // MainPage.xaml line 110
                {
                    global::Windows.UI.Xaml.Controls.Button element86 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element86).Click += this.CheckPermission;
                }
                break;
            case 87: // MainPage.xaml line 112
                {
                    this.DynamicOperation = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 88: // MainPage.xaml line 83
                {
                    this.ModernIcon = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.ModernIcon).Click += this.ModernIconClick;
                }
                break;
            case 89: // MainPage.xaml line 90
                {
                    this.DeskModernToggled = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)this.DeskModernToggled).Tapped += this.DeskModern;
                }
                break;
            case 90: // MainPage.xaml line 91
                {
                    this.LockModernToggled = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)this.LockModernToggled).Tapped += this.LockModern;
                }
                break;
            case 91: // MainPage.xaml line 86
                {
                    this.ModernWallpaperIcon = (global::Windows.UI.Xaml.Media.ImageBrush)(target);
                }
                break;
            case 92: // MainPage.xaml line 64
                {
                    this.WeatherIcon = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.WeatherIcon).Click += this.WeatherIconClick;
                }
                break;
            case 93: // MainPage.xaml line 71
                {
                    this.DeskWeatherToggled = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)this.DeskWeatherToggled).Tapped += this.DeskWeather;
                }
                break;
            case 94: // MainPage.xaml line 72
                {
                    this.LockWeatherToggled = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)this.LockWeatherToggled).Tapped += this.LockWeather;
                }
                break;
            case 95: // MainPage.xaml line 67
                {
                    this.WeahterWallpaperIcon = (global::Windows.UI.Xaml.Media.ImageBrush)(target);
                }
                break;
            case 96: // MainPage.xaml line 45
                {
                    this.DynamicIcon = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.DynamicIcon).Click += this.DynamicIconClick;
                }
                break;
            case 97: // MainPage.xaml line 52
                {
                    this.DeskDynamicToggled = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)this.DeskDynamicToggled).Tapped += this.DeskDynamic;
                }
                break;
            case 98: // MainPage.xaml line 53
                {
                    this.LockDynamicToggled = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)this.LockDynamicToggled).Tapped += this.LockDynamic;
                }
                break;
            case 99: // MainPage.xaml line 48
                {
                    this.DynamicWallpaperIcon = (global::Windows.UI.Xaml.Media.ImageBrush)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // MainPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    MainPage_obj1_Bindings bindings = new MainPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 30: // MainPage.xaml line 340
                {                    
                    global::Windows.UI.Xaml.Shapes.Ellipse element30 = (global::Windows.UI.Xaml.Shapes.Ellipse)target;
                    MainPage_obj30_Bindings bindings = new MainPage_obj30_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element30.DataContext);
                    element30.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element30, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element30, bindings);
                }
                break;
            case 38: // MainPage.xaml line 296
                {                    
                    global::Windows.UI.Xaml.Shapes.Ellipse element38 = (global::Windows.UI.Xaml.Shapes.Ellipse)target;
                    MainPage_obj38_Bindings bindings = new MainPage_obj38_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element38.DataContext);
                    element38.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element38, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element38, bindings);
                }
                break;
            case 76: // MainPage.xaml line 140
                {                    
                    global::Windows.UI.Xaml.Shapes.Ellipse element76 = (global::Windows.UI.Xaml.Shapes.Ellipse)target;
                    MainPage_obj76_Bindings bindings = new MainPage_obj76_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element76.DataContext);
                    element76.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element76, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element76, bindings);
                }
                break;
            }
            return returnValue;
        }

        // Api Information for conditional namespace declarations
        internal static bool IsApiContractPresent_Windows_Foundation_UniversalApiContract_5 = global::Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 5);
    }
}

